//
//  MonsterStatisticViewController.swift
//  Teremok-TV
//
//  Created by Дмитрий Грищенко on 03/09/2019.
//  Copyright (c) 2019 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MonsterStatisticDisplayLogic: CommonDisplayLogic {
    func showStats(_ model: MonsterStatisticViewController.Input)
}

class MonsterStatisticViewController: UIViewController, MonsterStatisticDisplayLogic {
    @IBOutlet private var userName: UILabel!
    @IBOutlet private var lastWeakTime: UILabel!
    @IBOutlet private var thisWeakTime: UILabel!
    @IBOutlet private var statStatus: UILabel!
    @IBOutlet private var homeBtn: KeyButton!
    @IBOutlet private var avatarBtn: AvatarButton!
    var interactor: MonsterStatisticBusinessLogic?
    var router: (CommonRoutingLogic & MonsterStatisticRoutingLogic & MonsterStatisticDataPassing)?
    var modallyControllerRoutingLogic: CommonRoutingLogic? {
        get { return router }
    }
    var activityView: LottieHUD?

    struct Input {
        
    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = MonsterStatisticInteractor()
        let presenter = MonsterStatisticPresenter()
        let router = MonsterStatisticRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        activityView = LottieHUD()
        displayProfile()        
        showPreloader()
        interactor?.fetchStat()
    }
    
    func showStats(_ model: Input) {
        hidePreloader()
    }
    
    func displayProfile() {
        guard let child = Profile.currentChild else { return }
        
        if let avatar = child.pic {
            avatarBtn.setAvatar(linktoLoad: avatar)
            
        }
        if let name = child.name {
            userName.text = name
        }
    }
}
