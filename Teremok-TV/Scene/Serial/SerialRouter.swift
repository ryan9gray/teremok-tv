//
//  SerialRouter.swift
//  Teremok-TV
//
//  Created by R9G on 06/09/2018.
//  Copyright (c) 2018 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SerialRoutingLogic: CommonRoutingLogic {
    func navigateToPreview(number: Int)
    func navigateDescription(item: Serial.Item?)
	func openPremiumAlert()
}

protocol SerialDataPassing {
    var dataStore: SerialDataStore? { get }
}

class SerialRouter: NSObject, SerialRoutingLogic, SerialDataPassing {
    weak var viewController: SerialViewController?
    var dataStore: SerialDataStore?
    var modalControllersQueue = Queue<UIViewController>()

    // MARK: Routing
    func navigateToPreview(number: Int){
        let serials = PreviewViewController.instantiate(fromStoryboard: .play)
        guard var dataStore = serials.router?.dataStore else { return }
        guard let id = viewController?.router?.dataStore?.videoItems[safe: number]?.id else {
            return
        }
        dataStore.model = .online(id: id)
        dataStore.razdId = viewController?.router?.dataStore?.razdelId
        viewController?.masterRouter?.presentNextChild(viewController: serials)
    }
    func navigateDescription(item: Serial.Item?){
        let vc = SerialDescriptionViewController.instantiate(fromStoryboard: .alerts)
        vc.item = item
        vc.delegate = viewController
        vc.modalTransitionStyle = .crossDissolve
        viewController?.present(vc, animated: true, completion: nil)
    }

	func openPremiumAlert() {
		let vc = PromoPremiumAlertViewController.instantiate(fromStoryboard: .alerts)
		vc.modalTransitionStyle = .crossDissolve
		vc.action = { [unowned self] in
			self.viewController?.masterRouter?.navigateToStore()
		}
		viewController?.present(vc, animated: true, completion: nil)
	}
}
