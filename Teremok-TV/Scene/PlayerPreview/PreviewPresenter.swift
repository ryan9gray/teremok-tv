//
//  PreviewPresenter.swift
//  Teremok-TV
//
//  Created by R9G on 05/09/2018.
//  Copyright (c) 2018 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PreviewPresentationLogic: CommonPresentationLogic {
     func presentVideo(_ model: VideoItemModel)
    func presentRecomendet(_ models: [Fav.OfflineVideoModel])
    func presentVideo(link: String)
}

class PreviewPresenter: PreviewPresentationLogic {
    weak var viewController: PreviewDisplayLogic?
  
    var displayModule: CommonDisplayLogic? {
        return viewController
    }
    // MARK: Do something
    
    func presentVideo(_ model: VideoItemModel){

        presentRecomendet(model)
        if let firstLink = model.stream {
            presentVideo(link: firstLink)
        }
    }
    
    func presentVideo(link: String){
        guard !link.isEmpty, let url =  URL(string: link.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)!) else {
            return
        }
        viewController?.playVideo(url: url)
    }
    
    
    func presentRecomendet(_ model: VideoItemModel){
        
        var recom: [PreviewModel] = []
        
        for item in model.recommendations ?? []  {
            let serial = PreviewModel(title: item.name ?? "", subtitle: item.description ?? "", imageLink: item.picture ?? "")
            recom.append(serial)
        }
        viewController?.displayRecomendate(items: recom)
    }
    func presentRecomendet(_ models: [Fav.OfflineVideoModel]){
        
        var recom: [PreviewModel] = []
        viewController?.isOffline = true

        for item in models  {
            switch item.image {
                case .url(let url):
                    let serial = PreviewModel(title: "", subtitle: "", imageLink: url?.absoluteString ?? "")
                    recom.append(serial)
                case .data(_):
                    break
            }

        }
        viewController?.displayRecomendate(items: recom)
    }
    
}
