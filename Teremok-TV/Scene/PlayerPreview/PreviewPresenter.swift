//
//  PreviewPresenter.swift
//  Teremok-TV
//
//  Created by R9G on 05/09/2018.
//  Copyright (c) 2018 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import AVFoundation
import AVKit

protocol PreviewPresentationLogic: CommonPresentationLogic {
    func presentVideo(_ model: VideoItemModel)
    func presentRecomendet(_ models: [Fav.OfflineVideoModel])
    func presentVideo(link: URL)
}

class PreviewPresenter: PreviewPresentationLogic {
    weak var viewController: PreviewDisplayLogic?
  
    var displayModule: CommonDisplayLogic? {
        return viewController
    }
    // MARK: Do something
    
    func presentVideo(_ model: VideoItemModel){
        presentRecomendet(model)
        if let firstLink = model.stream {
            guard
                let url =  URL(string: firstLink.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)!)
            else { return }

            presentVideo(link: url)
        }
    }
    
    func presentVideo(link: URL) {
        let asset = AVURLAsset(url: link)
        //print("fileExists \(try? FileManager.default.fileExists(atPath: asset.url.path))")
        viewController?.playVideo(playerAsset: asset)
    }
    
    
    func presentRecomendet(_ model: VideoItemModel){
        var recom: [PreviewModel] = []
        
        for item in model.recommendations ?? []  {
            let serial = PreviewModel(
                title: item.name ?? "",
                subtitle: item.description ?? "",
                imageLink: .url(URL(string: item.picture ?? ""))
            )
            recom.append(serial)
        }
        viewController?.displayRecomendate(items: recom)
    }
    func presentRecomendet(_ models: [Fav.OfflineVideoModel]){
        var recom: [PreviewModel] = []
        viewController?.isOffline = true

        for item in models  {
            let serial = PreviewModel(title: "", subtitle: "", imageLink: item.image)
            recom.append(serial)
        }
        viewController?.displayRecomendate(items: recom)
    }
}
