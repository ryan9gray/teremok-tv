//
//  AnimalsRoundsRouter.swift
//  Teremok-TV
//
//  Created by Evgeny Ivanov on 19/05/2019.
//  Copyright (c) 2019 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AnimalsRoundsRoutingLogic: CommonRoutingLogic {
    func showPack(idx: Int)
    func buyAlert()
}

protocol AnimalsRoundsDataPassing {
    var dataStore: AnimalsRoundsDataStore? { get }
}

class AnimalsRoundsRouter: AnimalsRoundsRoutingLogic, AnimalsRoundsDataPassing {
    weak var viewController: AnimalsRoundsViewController?
    var dataStore: AnimalsRoundsDataStore?
    var modalControllersQueue = Queue<UIViewController>()

    var testBool = true

    func showWithIntroducePack(idx: Int) {
        let controller = IntroduceVideoViewController.instantiate(fromStoryboard: .common)
        controller.video = .introduce
        viewController?.masterRouter?.introduceController(viewController: controller, completion: { [weak self] in
            self?.showPack(idx: idx)
        })
    }

    func showPack(idx: Int) {
        guard let id = dataStore?.list[safe: idx]?.id else { return }
        
        viewController?.masterRouter?.startFlow(id)
    }

    func buyAlert() {
        let vc = CloudAlertViewController.instantiate(fromStoryboard: .alerts)
        let text = Main.Messages.buyGames
        vc.model = AlertModel.init(title: "", subtitle: text, buttonTitle: "В настройки")
        vc.modalTransitionStyle = .crossDissolve
        vc.modalPresentationStyle = .overCurrentContext
        vc.complition = { [weak self] in
            self?.presentStore()
        }
        viewController?.presentAlertModally(alertController: vc)
    }

    func authAlert() {
        let vc = CloudAlertViewController.instantiate(fromStoryboard: .alerts)
        let text = Main.Messages.buyIntelect
        vc.model = AlertModel.init(title: "", subtitle: text, buttonTitle: "В настройки")
        vc.modalTransitionStyle = .crossDissolve
        vc.modalPresentationStyle = .overCurrentContext
        vc.complition = { [weak self] in
            self?.presentStore()
        }
        viewController?.presentAlertModally(alertController: vc)
    }

    func presentStore() {
        viewController?.master?.openSettings()
    }
}
