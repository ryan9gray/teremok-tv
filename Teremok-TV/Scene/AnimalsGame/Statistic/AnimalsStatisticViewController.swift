//
//  AnimalsStatisticViewController.swift
//  Teremok-TV
//
//  Created by Evgeny Ivanov on 25/05/2019.
//  Copyright (c) 2019 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AnimalsStatisticDisplayLogic: CommonDisplayLogic {
    func displayStat(item: AnimalsStatistic.Statistic)
}

class AnimalsStatisticViewController: GameViewController, AnimalsStatisticDisplayLogic {
    var interactor: AnimalsStatisticBusinessLogic?
    var router: (CommonRoutingLogic & AnimalsStatisticRoutingLogic & AnimalsStatisticDataPassing)?
    var modallyControllerRoutingLogic: CommonRoutingLogic? {
        get { return router }
    }
    var activityView: LottieHUD?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = AnimalsStatisticInteractor()
        let presenter = AnimalsStatisticPresenter()
        let router = AnimalsStatisticRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle
    @IBOutlet private var avatarButton: AvatarButton!
    @IBOutlet private var nameLabel: UILabel!
    @IBOutlet private var answersLabel: UILabel!
    @IBOutlet private var speedLabel: UILabel!
    @IBOutlet private var scoreLabel: UILabel!
    @IBOutlet var segmentControll: UISegmentedControl!

    var item: AnimalsStatistic.Statistic?

    @IBAction func difficultsChange(_ sender: UISegmentedControl) {
        switch sender.selectedSegmentIndex {
        case 0:
            LocalStore.animalsIsHard = false
        case 1:
            LocalStore.animalsIsHard = true
        default:
            break
        }
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        interactor?.fetchStat()
        segmentControll.layer.cornerRadius = 18.0
        segmentControll.selectedSegmentIndex = (router?.dataStore?.isEasy ?? true) ? 0: 1
        displayProfile()
        view.layoutSubviews()
        
        speedLabel.textColor = UIColor.View.Label.grass
        answersLabel.textColor = UIColor.View.Label.orange
        scoreLabel.textColor = UIColor.View.Label.ocean
    }

    func displayProfile() {
        guard let childs = Profile.current?.childs else { return }

        if let child = childs.first(where: {$0.current ?? false}) {
            if let pic = child.pic {
                avatarButton.setAvatar(linktoLoad: pic)
            }
            nameLabel.text = child.name ?? ""
        }
    }

    func displayStat(item: AnimalsStatistic.Statistic) {
        self.item = item
        showStat()
    }

    func showStat() {
        guard let item = self.item else { return }

        switch segmentControll.selectedSegmentIndex {
        case 0:
            setStats(data: item.easy)
        case 1:
            setStats(data: item.hard)
        default:
            break
        }
    }

    func setStats(data: AnimalsStatistic.StatisticData) {
        speedLabel.text = data.speed
        answersLabel.text = data.rightAnswers
        scoreLabel.text = data.percent
    }

}
