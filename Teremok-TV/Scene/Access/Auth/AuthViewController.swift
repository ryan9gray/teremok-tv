//
//  AuthViewController.swift
//  Teremok-TV
//
//  Created by R9G on 10.08.2018.
//  Copyright (c) 2018 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthDisplayLogic: CommonDisplayLogic {
    func displayMain()
}

class AuthViewController: AbstracViewController, AuthDisplayLogic {
    var activityView: LottieHUD?
    
    var interactor: AuthBusinessLogic?
    var router: (NSObjectProtocol & AuthRoutingLogic & AuthDataPassing & CommonRoutingLogic)?
    
    var modallyControllerRoutingLogic: CommonRoutingLogic? {
        get { return router }
    }
    @IBOutlet private var passTxtField: UITextField!
    @IBOutlet private var emailTxtField: UITextField!
    @IBOutlet private var backBtn: UIButton!
    @IBOutlet private var signInBtn: OrangeButton!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = AuthInteractor()
        let presenter = AuthPresenter()
        let router = AuthRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        prepareUI()
    }

    private func prepareUI(){
        activityView = LottieHUD()
        backBtn.isHidden = !(masterRouter?.canPop() ?? false)
        if LocalStore.firstLaunch() {
            LocalStore.setfirstLaunch()
        }
    }

    // MARK: Do something
    @IBAction func saveClick(_ sender: UIButton) {
        save()
    }
    @IBAction func regClick(_ sender: UIButton) {
        masterRouter?.navigateToReg()
    }
    func save() {
        guard let email = emailTxtField.text,
            let pass = passTxtField.text,
            !email.isEmpty, !pass.isEmpty else {
                return
        }
        showPreloader()
        interactor?.authorization(userEmail: email, userPass: pass)
    }

    @IBAction func backClick(_ sender: Any) {
        masterRouter?.popChild()
    }

    @IBAction func resetPasswordClick(_ sender: Any) {
        router?.routToResetPass()
    }

    func displayMain(){
        hidePreloader()
        router?.routToMain()
    }
}

extension AuthViewController: UITextFieldDelegate {

    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if textField == emailTxtField {
            passTxtField.becomeFirstResponder()
        } else {
            save()
        }
        return true
    }
}
