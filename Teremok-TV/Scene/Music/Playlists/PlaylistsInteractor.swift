//
//  PlaylistsInteractor.swift
//  Teremok-TV
//
//  Created by Evgeny Ivanov on 17/03/2019.
//  Copyright (c) 2019 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PlaylistsBusinessLogic {
    func getPlaylist()
}

protocol PlaylistsDataStore {
    var albumId: Int? { get set }
    var mainResponse: MusicPlaylistResponse? { get }

}

class PlaylistsInteractor: PlaylistsBusinessLogic, PlaylistsDataStore {
    var presenter: PlaylistsPresentationLogic?
    var albumId: Int?
    let service: PlaylistServiceProtocol = MainPlaylistService()

    var items: [MusicPlaylistItemResponse] = []
    var mainResponse: MusicPlaylistResponse?

    func getPlaylist() {
        guard let id = albumId else { return }

        service.getPlaylist(id: id) { [weak self] result in
            switch result {
            case .success(let response):
                self?.response(response)
            case .failure(let error):
                self?.presenter?.presentError(error: error)
            }
        }
    }

    func response(_ response: MusicPlaylistResponse){
        mainResponse = response
        guard let items = response.items else { return }
        self.items.append(contentsOf: items)
        presenter?.present(item: response)
    }
}
