//
//  AlbumInteractor.swift
//  Teremok-TV
//
//  Created by Evgeny Ivanov on 17/03/2019.
//  Copyright (c) 2019 xmedia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AlbumBusinessLogic {
    func getMain()
    var hasMore : Bool { get }
}

protocol AlbumDataStore {
    var albums: [MusicAlbumResponse] { get }
}

class AlbumInteractor: AlbumBusinessLogic, AlbumDataStore {
    var presenter: AlbumPresentationLogic?
    let service: MainMusicProtocol = MusicService()

    var albums: [MusicAlbumResponse] = []
    var nextShift: Int?
    let countSerials = 10
    var hasMore : Bool = true

    func getMain() {
        guard hasMore else { return }

        service.getMain(itemsOnPage: countSerials, shiftItem: nextShift ?? 0) { [weak self] (result) in
            switch result {
            case .success(let response):
                self?.response(response)
            case .failure(let error):
                self?.presenter?.presentError(error: error)
            }
        }
    }
    func response(_ response: MusicContentResponse){
        nextShift = response.startItemIdInNextPage
        hasMore = response.items.count > 0
        albums.append(contentsOf: response.items)
        presenter?.present(items: response.items)
    }
}
